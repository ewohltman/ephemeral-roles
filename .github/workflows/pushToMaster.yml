---
name: build
"on":
  push:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: go

      - name: Check out code
        uses: actions/checkout@v2

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.31

      - name: Run tests
        run: make test

      - name: Run test coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PATH="${PATH}:$(go env GOPATH)/bin"

          GO111MODULE=off go get -u github.com/mattn/goveralls

          goveralls -coverprofile=coverage.out -service=github

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

      - name: Build binary
        run: make build

      - name: Build Docker image
        run: make image

      - name: Push Docker image
        env:
          DOCKER_USER: "${{ secrets.DOCKER_USER }}"
          DOCKER_PASS: "${{ secrets.DOCKER_PASS }}"
        run: make push

      - name: Deploy to Kubernetes
        env:
          KUBERNETES_CONFIG: "${{ secrets.KUBERNETES_CONFIG }}"
          BOT_TOKEN: "${{ secrets.BOT_TOKEN }}"
          DISCORDRUS_WEBHOOK_URL: "${{ secrets.DISCORDRUS_WEBHOOK_URL }}"
        run: |
          PATH="${PATH}:$(go env GOPATH)/bin"
          KUBECTL_BIN="$(go env GOPATH)/bin/kubectl"

          KUBECTL_VERSION_URL="https://storage.googleapis.com/kubernetes-release/release/stable.txt"
          KUBECTL_VERSION="$(curl -s ${KUBECTL_VERSION_URL})"

          KUBECTL_URL="https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"

          curl -sL "${KUBECTL_URL}" -o "${KUBECTL_BIN}"
          chmod +x "${KUBECTL_BIN}"

          mkdir ~/.kube
          echo "${KUBERNETES_CONFIG}" > ~/.kube/config

          make deploy
